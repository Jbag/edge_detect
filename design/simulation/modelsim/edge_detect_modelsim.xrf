vendor_name = ModelSim
source_file = 1, D:/FPGA/altera13.0project/edge_detect/design/edge_detect.v
source_file = 1, D:/FPGA/altera13.0project/edge_detect/design/db/edge_detect.cbx.xml
design_name = edge_detect
instance = comp, \cnt[2] , cnt[2], edge_detect, 1
instance = comp, \cnt[3] , cnt[3], edge_detect, 1
instance = comp, \cnt[0] , cnt[0], edge_detect, 1
instance = comp, \cnt[1] , cnt[1], edge_detect, 1
instance = comp, \cnt[4] , cnt[4], edge_detect, 1
instance = comp, \cnt[5] , cnt[5], edge_detect, 1
instance = comp, \cnt[6] , cnt[6], edge_detect, 1
instance = comp, \cnt[7] , cnt[7], edge_detect, 1
instance = comp, \cnt[8] , cnt[8], edge_detect, 1
instance = comp, \cnt[9] , cnt[9], edge_detect, 1
instance = comp, \cnt[10] , cnt[10], edge_detect, 1
instance = comp, \cnt[11] , cnt[11], edge_detect, 1
instance = comp, \cnt[12] , cnt[12], edge_detect, 1
instance = comp, \cnt[13] , cnt[13], edge_detect, 1
instance = comp, \cnt[14] , cnt[14], edge_detect, 1
instance = comp, \cnt[15] , cnt[15], edge_detect, 1
instance = comp, \cnt[16] , cnt[16], edge_detect, 1
instance = comp, \cnt[17] , cnt[17], edge_detect, 1
instance = comp, \cnt[18] , cnt[18], edge_detect, 1
instance = comp, \cnt[19] , cnt[19], edge_detect, 1
instance = comp, \cnt[20] , cnt[20], edge_detect, 1
instance = comp, \cnt[21] , cnt[21], edge_detect, 1
instance = comp, \cnt[0]~22 , cnt[0]~22, edge_detect, 1
instance = comp, \cnt[1]~24 , cnt[1]~24, edge_detect, 1
instance = comp, \cnt[2]~26 , cnt[2]~26, edge_detect, 1
instance = comp, \cnt[3]~28 , cnt[3]~28, edge_detect, 1
instance = comp, \cnt[4]~30 , cnt[4]~30, edge_detect, 1
instance = comp, \cnt[5]~32 , cnt[5]~32, edge_detect, 1
instance = comp, \cnt[6]~34 , cnt[6]~34, edge_detect, 1
instance = comp, \cnt[7]~36 , cnt[7]~36, edge_detect, 1
instance = comp, \cnt[8]~38 , cnt[8]~38, edge_detect, 1
instance = comp, \cnt[9]~40 , cnt[9]~40, edge_detect, 1
instance = comp, \cnt[10]~42 , cnt[10]~42, edge_detect, 1
instance = comp, \cnt[11]~44 , cnt[11]~44, edge_detect, 1
instance = comp, \cnt[12]~46 , cnt[12]~46, edge_detect, 1
instance = comp, \cnt[13]~48 , cnt[13]~48, edge_detect, 1
instance = comp, \cnt[14]~50 , cnt[14]~50, edge_detect, 1
instance = comp, \cnt[15]~52 , cnt[15]~52, edge_detect, 1
instance = comp, \cnt[16]~54 , cnt[16]~54, edge_detect, 1
instance = comp, \cnt[17]~56 , cnt[17]~56, edge_detect, 1
instance = comp, \cnt[18]~58 , cnt[18]~58, edge_detect, 1
instance = comp, \cnt[19]~60 , cnt[19]~60, edge_detect, 1
instance = comp, \cnt[20]~62 , cnt[20]~62, edge_detect, 1
instance = comp, \cnt[21]~64 , cnt[21]~64, edge_detect, 1
instance = comp, \Equal1~0 , Equal1~0, edge_detect, 1
instance = comp, \Equal1~1 , Equal1~1, edge_detect, 1
instance = comp, \Equal1~2 , Equal1~2, edge_detect, 1
instance = comp, \Equal1~3 , Equal1~3, edge_detect, 1
instance = comp, \Equal1~4 , Equal1~4, edge_detect, 1
instance = comp, \Equal1~5 , Equal1~5, edge_detect, 1
instance = comp, \Equal1~6 , Equal1~6, edge_detect, 1
instance = comp, \clk_r~0 , clk_r~0, edge_detect, 1
instance = comp, \clk_50M~I , clk_50M, edge_detect, 1
instance = comp, \clk_r~clkctrl , clk_r~clkctrl, edge_detect, 1
instance = comp, \clk_50M~clkctrl , clk_50M~clkctrl, edge_detect, 1
instance = comp, \rx_int~I , rx_int, edge_detect, 1
instance = comp, \rx_int0~feeder , rx_int0~feeder, edge_detect, 1
instance = comp, \rst_n~I , rst_n, edge_detect, 1
instance = comp, \rx_int1~feeder , rx_int1~feeder, edge_detect, 1
instance = comp, \rx_int2~feeder , rx_int2~feeder, edge_detect, 1
instance = comp, \pos_rx_int~0 , pos_rx_int~0, edge_detect, 1
instance = comp, \neg_rx_int~0 , neg_rx_int~0, edge_detect, 1
instance = comp, \doub_rx_int~0 , doub_rx_int~0, edge_detect, 1
instance = comp, \pos_rx_int~I , pos_rx_int, edge_detect, 1
instance = comp, \neg_rx_int~I , neg_rx_int, edge_detect, 1
instance = comp, \doub_rx_int~I , doub_rx_int, edge_detect, 1
